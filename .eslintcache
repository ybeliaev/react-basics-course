[{"G:\\Projects\\react_basics_course\\src\\index.js":"1","G:\\Projects\\react_basics_course\\src\\reportWebVitals.js":"2","G:\\Projects\\react_basics_course\\src\\App.js":"3","G:\\Projects\\react_basics_course\\src\\lessons\\1-jsx-to-hyperscript\\Lesson1.js":"4","G:\\Projects\\react_basics_course\\src\\lessons\\2-hyperscript-to-jsx\\Lesson2.js":"5","G:\\Projects\\react_basics_course\\src\\lessons\\3-progress-bar\\Lesson3.js":"6","G:\\Projects\\react_basics_course\\src\\lessons\\4-common-card\\Lesson4.js":"7","G:\\Projects\\react_basics_course\\src\\lessons\\5-pattert-slots\\Lesson5Resource.js":"8","G:\\Projects\\react_basics_course\\src\\lessons\\5-pattert-slots\\Lesson5.js":"9","G:\\Projects\\react_basics_course\\src\\styledComponents\\Ripple\\index.js":"10","G:\\Projects\\react_basics_course\\src\\styledComponents\\Ripple\\style.js":"11"},{"size":517,"mtime":1607428483128,"results":"12","hashOfConfig":"13"},{"size":377,"mtime":1607428483131,"results":"14","hashOfConfig":"13"},{"size":829,"mtime":1608298152494,"results":"15","hashOfConfig":"13"},{"size":1560,"mtime":1607939508426,"results":"16","hashOfConfig":"13"},{"size":2520,"mtime":1608294131944,"results":"17","hashOfConfig":"13"},{"size":1283,"mtime":1607946506155,"results":"18","hashOfConfig":"13"},{"size":4424,"mtime":1608151850595,"results":"19","hashOfConfig":"13"},{"size":3014,"mtime":1608298425638,"results":"20","hashOfConfig":"13"},{"size":2278,"mtime":1608663326359,"results":"21","hashOfConfig":"13"},{"size":2721,"mtime":1608569619481,"results":"22","hashOfConfig":"13"},{"size":567,"mtime":1608323982672,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"15sp6e4",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"G:\\Projects\\react_basics_course\\src\\index.js",[],["49","50"],"G:\\Projects\\react_basics_course\\src\\reportWebVitals.js",[],"G:\\Projects\\react_basics_course\\src\\App.js",[],"G:\\Projects\\react_basics_course\\src\\lessons\\1-jsx-to-hyperscript\\Lesson1.js",[],"G:\\Projects\\react_basics_course\\src\\lessons\\2-hyperscript-to-jsx\\Lesson2.js",["51","52"],"import React from 'react';\r\nimport styled from 'styled-components';\r\n// ***JSX***\r\n// data list\r\nlet items = [\r\n  {name:\"Home\", href: \"#home\"}, \r\n  {name: \"Library\", href: \"#library\"}, \r\n  {name: \"Data\", href: null}\r\n]\r\n// styles\r\nlet Ol = styled.ul`\r\n  padding: 10px 16px;\r\n  list-style: none;\r\n  background-color: #eee;\r\n`\r\nlet Li = styled.li`\r\n  display: inline;\r\n  font-size: 18px;\r\n  padding: 8px;\r\n  &+&::before {\r\n    content:\"/\";\r\n    display: inline-block;\r\n    padding-right: .75rem;\r\n    color: #6c757d;\r\n  }\r\n`\r\nlet A = styled.a`\r\n  color: #0275d8;\r\n  text-decoration: none;\r\n    &:hover {\r\n      color: #01447e;\r\n      text-decoration: underline;\r\n    }\r\n    /* не знаю как реализовать &:last-child:hover */\r\n`\r\n\r\n// *******************JSX************************\r\nlet jsx = <div>\r\n  <nav>\r\n    <Ol class=\"breadcrumb\">\r\n      {items.map((item, idx) => {\r\n        const {name, href} = item; \r\n        if(idx == items.length - 1){\r\n             return <Li key={idx}>{name}</Li>\r\n        }else{\r\n          return(          \r\n          <Li key={idx}><A href={href}>{name}</A></Li>\r\n          )\r\n        }     \r\n      })}\r\n    </Ol>\r\n  </nav>\r\n</div>\r\n\r\n// *******************HyperScript************************\r\nlet LiHyperScript = items.map((item, idx) => {\r\n  const {name, href} = item; \r\n  if(idx == items.length - 1){\r\n       return <Li key={idx}>{name}</Li>\r\n  }else{\r\n    return(          \r\n    <Li key={idx}><A href={href}>{name}</A></Li>\r\n    )\r\n  }     \r\n})\r\n\r\nlet hs = React.createElement(\"div\", {}, [\r\n  React.createElement(\"nav\", {}, [\r\n    React.createElement(Ol, {}, [LiHyperScript]),\r\n  ]),\r\n])\r\n\r\n// Вариант Клешнина\r\n// HyperScript\r\n// let li = (attrs, children ) => React.createElement(\"li\", attrs, children)\r\n// let a = (attrs, children) => React.createElement(\"a\", attrs, children)\r\n// // let div = ... etc\r\n// // ^ the spoiler of how H.S. can be made more comfortable\r\n\r\n// let hs = React.createElement(\"nav\", {}, [\r\n//   React.createElement(\"ol\", {className: \"breadcrumb\"}, [\r\n//     li({className: \"breadcrumb-item\"}, [a({href: \"#home\"}, \"Home\")]),\r\n//     li({className: \"breadcrumb-item\"}, [a({href: \"#library\"}, \"Library\")]),\r\n//     li({className: \"breadcrumb-item active\"}, \"Data\"),\r\n//   ])\r\n// ])\r\nexport default function Lesson2() {\r\n  return <div className=\"wrapper_lesson\">\r\n    <h3>Урок 2</h3>\r\n    <h4>JSX Breadcrumbs (toDo)</h4>\r\n    <div>{jsx}</div>\r\n\r\n    <h4>HyperScript Breadcrumbs! (toDo)</h4>\r\n    <div>{hs}</div>\r\n  </div>\r\n}\r\n\r\n","G:\\Projects\\react_basics_course\\src\\lessons\\3-progress-bar\\Lesson3.js",[],"G:\\Projects\\react_basics_course\\src\\lessons\\4-common-card\\Lesson4.js",[],"G:\\Projects\\react_basics_course\\src\\lessons\\5-pattert-slots\\Lesson5Resource.js",["53","54","55","56","57","58","59","60"],"import React from 'react';\r\n\r\nimport PropTypes from \"prop-types\"\r\n\r\nexport default function Lesson5Resource() {\r\n    return <div className=\"wrapper_lesson\">\r\n      <h3>Урок 5</h3>\r\n        <h3>Pattern \"Slots\"</h3>\r\n        <p style={{textAlign:\"center\", fontSize:\"15px\", color:\"tomato\"}}>Исходники проекта</p>\r\n        <div className=\"p-3\">\r\n    <div className=\"card-columns\">\r\n      <Card>\r\n        <img className=\"card-img-top\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/4/41/Road_and_nature_of_beautifull_Bangladesh_village.jpg/320px-Road_and_nature_of_beautifull_Bangladesh_village.jpg\" alt=\"Card image cap\"/>\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">Card title 1</h5>\r\n          <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the\r\n            card's content.</p>\r\n          <a href=\"#\" className=\"btn btn-primary\">Go somewhere</a>\r\n        </div>\r\n      </Card>\r\n      <Card>\r\n        <Card.Header>\r\n          <span className=\"badge badge-secondary\">Featured</span>\r\n        </Card.Header>\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">Card title 2</h5>\r\n          <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the\r\n            card's content.</p>\r\n          <a href=\"#\" className=\"btn btn-primary\">Go somewhere</a>\r\n        </div>\r\n      </Card>\r\n      <Card>\r\n        <Card.Header>\r\n          <span className=\"badge badge-warning\">Best Deal</span>\r\n        </Card.Header>\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">Card title 3</h5>\r\n          <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the\r\n            card's content.</p>\r\n          <a href=\"#\" className=\"btn btn-primary\">Go somewhere</a>\r\n        </div>\r\n        <Card.Footer>\r\n          <span className=\"text-secondary\">sales ends on Dec 31 2020</span>\r\n        </Card.Footer>\r\n      </Card>\r\n    </div>\r\n  </div>\r\n    </div>\r\n  }\r\n  function Card({children}) {\r\n    children = React.Children.toArray(children)\r\n    let headerComponent = children.find(node => {\r\n      console.log(\"node: \", node.type);\r\n      return node.type == Card.Header\r\n    })\r\n    let footerComponent = children.find(node => node.type == Card.Footer)\r\n    let content = children.filter(node => node.type != Card.Header && node.type != Card.Footer)\r\n    return <div className=\"card\"> \r\n      {headerComponent && <div className=\"card-header\">{headerComponent}</div>}\r\n      {content}\r\n      {footerComponent && <div className=\"card-footer\">{footerComponent}</div>}\r\n    </div>\r\n  }\r\n  Card.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n  }\r\n  Card.Header = ({children}) => children\r\n  Card.Header.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n  }\r\n  Card.Footer = ({children}) => children\r\n  Card.Footer.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n  }","G:\\Projects\\react_basics_course\\src\\lessons\\5-pattert-slots\\Lesson5.js",["61"],"G:\\Projects\\react_basics_course\\src\\styledComponents\\Ripple\\index.js",[],"G:\\Projects\\react_basics_course\\src\\styledComponents\\Ripple\\style.js",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":43,"column":16,"nodeType":"68","messageId":"69","endLine":43,"endColumn":18},{"ruleId":"66","severity":1,"message":"67","line":58,"column":10,"nodeType":"68","messageId":"69","endLine":58,"endColumn":12},{"ruleId":"70","severity":1,"message":"71","line":13,"column":9,"nodeType":"72","endLine":13,"endColumn":237},{"ruleId":"73","severity":1,"message":"74","line":18,"column":11,"nodeType":"72","endLine":18,"endColumn":51},{"ruleId":"73","severity":1,"message":"74","line":29,"column":11,"nodeType":"72","endLine":29,"endColumn":51},{"ruleId":"73","severity":1,"message":"74","line":40,"column":11,"nodeType":"72","endLine":40,"endColumn":51},{"ruleId":"66","severity":1,"message":"67","line":54,"column":24,"nodeType":"68","messageId":"69","endLine":54,"endColumn":26},{"ruleId":"66","severity":1,"message":"67","line":56,"column":59,"nodeType":"68","messageId":"69","endLine":56,"endColumn":61},{"ruleId":"66","severity":1,"message":"75","line":57,"column":53,"nodeType":"68","messageId":"69","endLine":57,"endColumn":55},{"ruleId":"66","severity":1,"message":"75","line":57,"column":81,"nodeType":"68","messageId":"69","endLine":57,"endColumn":83},{"ruleId":"66","severity":1,"message":"67","line":58,"column":57,"nodeType":"68","messageId":"69","endLine":58,"endColumn":59},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation"]